##server.port=9600
### Spring DATASOURCE (DataSourceAutoConfiguration & DataSourceProperties) ?serverTimezone=Europe/Amsterdam&amp
##security.basic.enabled=false
#spring.datasource.url = jdbc:mysql://localhost:3306/security?serverTimezone=Europe/Amsterdam&amp
#spring.datasource.username = root
#spring.datasource.password = 
### Hibernate Properties
## The SQL dialect makes Hibernate generate better SQL for the chosen database
#spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5Dialect
##spring.datasource.driverClassName=com.mysql.jdbc.Driver
###spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver 
## Hibernate ddl auto (create,create-drop, validate, update)
#spring.jpa.hibernate.ddl-auto = update
#server.port=8082

## = DATA SOURCE
## ===============================
## Set here configurations for the database connection
#spring.datasource.url=jdbc:postgresql://ec2-107-20-167-11.compute-1.amazonaws.com:5432/dadalddik0s7cn?sslmode=require
#spring.datasource.username=rcviuorccnwmgi
#spring.datasource.password=3b280321de195369b467967069a7b4d10993c0060d5b955f67f93a215e88bd61
#spring.datasource.driver-class-name=org.postgresql.Driver
## Keep the connection alive if idle for a long time (needed in production)
##spring.datasource.testWhileIdle=true
##spring.datasource.validationQuery=SELECT 1
## ===============================
## = JPA / HIBERNATE
## ===============================
## Show or not log for each sql query
#spring.jpa.show-sql=true
## Hibernate ddl auto (create, create-drop, update): with "create-drop" the database
## schema will be automatically created afresh for every start of application
#spring.jpa.hibernate.ddl-auto=update
#
## Naming strategy
#spring.jpa.hibernate.naming.implicit-strategy=org.hibernate.boot.model.naming.ImplicitNamingStrategyLegacyHbmImpl
#spring.jpa.hibernate.naming.physical-strategy=org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy
#
## Allows Hibernate to generate SQL optimized for a particular DBMS
#spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

## Spring DATASOURCE (DataSourceAutoConfiguration & DataSourceProperties) ?serverTimezone=Europe/Amsterdam&amp
spring.datasource.url = jdbc:mysql://localhost:3306/security?serverTimezone=Europe/Amsterdam&amp
spring.datasource.username = root
spring.datasource.password = 
## Hibernate Properties
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5Dialect
spring.jpa.hibernate.ddl-auto = update


#spring.datasource.url=jdbc:postgresql://ec2-23-21-128-35.compute-1.amazonaws.com:5432/d6e8vnkjqo99tm?sslmode=require
#spring.datasource.username=kewkgeavwtimpn
#spring.datasource.password=c9b4f3f038b9e13ef5905ca5969d45184fb1ab76f5b3d69938c2f6b00f396789
#spring.jpa.show-sql=true
#spring.jpa.generate-ddl=true
#spring.jpa.hibernate.ddl-auto=update
#spring.datasource.driver-class-name=org.postgresql.Driver
#
## Naming strategy
#spring.jpa.hibernate.naming.implicit-strategy=org.hibernate.boot.model.naming.ImplicitNamingStrategyLegacyHbmImpl
#spring.jpa.hibernate.naming.physical-strategy=org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy
#
## Allows Hibernate to generate SQL optimized for a particular DBMS
#spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect


# Enable multipart uploads
spring.servlet.multipart.enabled=true
# Threshold after which files are written to disk.
spring.servlet.multipart.file-size-threshold=20KB
# Max file size.
spring.servlet.multipart.max-file-size=200MB
# Max Request Size
spring.servlet.multipart.max-request-size=215MB

# AWS credentials
aws.access.key.id = AKIAIXXYDPW46KQPGUZA
aws.access.key.secret = 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
aws.region = us-east-1
aws.s3.audio.bucket = educshare


